{"ast":null,"code":"var _jsxFileName = \"D:\\\\u\\\\Devops\\\\playlistsnow\\\\frontend\\\\src\\\\components\\\\CreatePlaylist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePlaylist = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [songs, setSongs] = useState([{\n    title: \"\",\n    artist: \"\"\n  }]);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const addSong = () => {\n    setSongs([...songs, {\n      title: \"\",\n      artist: \"\"\n    }]);\n  };\n  const removeSong = index => {\n    const updatedSongs = [...songs];\n    updatedSongs.splice(index, 1);\n    setSongs(updatedSongs);\n  };\n  const handleSongChange = (index, field, value) => {\n    const updatedSongs = [...songs];\n    updatedSongs[index][field] = value;\n    setSongs(updatedSongs);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Filter out empty songs\n    const validSongs = songs.filter(song => song.title && song.artist);\n    const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:8080/api\";\n    try {\n      await axios.post(`${API_URL}/playlists`, {\n        name,\n        description,\n        songs: validSongs\n      });\n      navigate(\"/playlists\");\n    } catch (err) {\n      console.error(\"Error al crear playlist:\", err);\n      setError(\"Error al crear la playlist\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-playlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Playlist Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Songs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: song.title,\n          onChange: e => handleSongChange(index, \"title\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Artist\",\n          value: song.artist,\n          onChange: e => handleSongChange(index, \"artist\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => removeSong(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addSong,\n        children: \"Add Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Create Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePlaylist, \"LgBGJlpOm3ffJgFPwTnKOqmT66g=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePlaylist;\nexport default CreatePlaylist;\nvar _c;\n$RefreshReg$(_c, \"CreatePlaylist\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","CreatePlaylist","_s","name","setName","description","setDescription","songs","setSongs","title","artist","error","setError","navigate","addSong","removeSong","index","updatedSongs","splice","handleSongChange","field","value","handleSubmit","e","preventDefault","validSongs","filter","song","API_URL","process","env","REACT_APP_API_URL","post","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","required","map","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/u/Devops/playlistsnow/frontend/src/components/CreatePlaylist.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst CreatePlaylist = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [songs, setSongs] = useState([{ title: \"\", artist: \"\" }]);\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const addSong = () => {\r\n    setSongs([...songs, { title: \"\", artist: \"\" }]);\r\n  };\r\n\r\n  const removeSong = (index) => {\r\n    const updatedSongs = [...songs];\r\n    updatedSongs.splice(index, 1);\r\n    setSongs(updatedSongs);\r\n  };\r\n\r\n  const handleSongChange = (index, field, value) => {\r\n    const updatedSongs = [...songs];\r\n    updatedSongs[index][field] = value;\r\n    setSongs(updatedSongs);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Filter out empty songs\r\n    const validSongs = songs.filter((song) => song.title && song.artist);\r\n\r\n    const API_URL =\r\n      process.env.REACT_APP_API_URL || \"http://localhost:8080/api\";\r\n\r\n    try {\r\n      await axios.post(`${API_URL}/playlists`, {\r\n        name,\r\n        description,\r\n        songs: validSongs,\r\n      });\r\n      navigate(\"/playlists\");\r\n    } catch (err) {\r\n      console.error(\"Error al crear playlist:\", err);\r\n      setError(\"Error al crear la playlist\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-playlist\">\r\n      <h2>Create New Playlist</h2>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Playlist Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Description:</label>\r\n          <textarea\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <h3>Songs:</h3>\r\n        {songs.map((song, index) => (\r\n          <div key={index} className=\"song-input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              value={song.title}\r\n              onChange={(e) => handleSongChange(index, \"title\", e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Artist\"\r\n              value={song.artist}\r\n              onChange={(e) =>\r\n                handleSongChange(index, \"artist\", e.target.value)\r\n              }\r\n            />\r\n            <button type=\"button\" onClick={() => removeSong(index)}>\r\n              Remove\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <button type=\"button\" onClick={addSong}>\r\n          Add Song\r\n        </button>\r\n        <button type=\"submit\" className=\"button\">\r\n          Create Playlist\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePlaylist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}